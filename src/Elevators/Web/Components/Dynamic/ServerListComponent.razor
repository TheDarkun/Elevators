@using Web.Connectors
@inject IServerListConnector Connector

<aside class="glass-panel row-start-2 h-full mx-8 flex flex-col w-24 gap-4  p-4 hide-overflow">
    @if (Connector.Guilds is null)
    {
        <section class="flex items-center justify-center h-full">
            <span class="loading loading-spinner loading-lg"></span>
        </section>
    }
    else
    {
        <AuthorizeView>
            @{
                var dict = context.User.Claims.ToDictionary(claim => claim.Type, claim => claim.Value);
            }
            <a href="/Dashboard" class="mask mask-circle hover:mask-squircle overflow-visible">
                <div class="cursor-pointer shadow-2xl">
                    <img src="https://cdn.discordapp.com/avatars/@dict["Id"]/@(dict["Avatar"]).png"/>
                </div>
            </a>
            
        </AuthorizeView>
        <hr/>
        <section class="h-full w-full items-start overflow-y-scroll gap-4">
            @foreach (var server in Connector.Guilds)
            {
                <a href="/Server/@server.Id" class="avatar overflow-visible">
                    <div class="mask mask-circle hover:mask-squircle cursor-pointer overflow-visible">
                    @if (string.IsNullOrWhiteSpace(server.Icon))
                    {
                        <h3 class="bg-primary p-4 flex items-center justify-center w-full h-full">
                            @server.Name.Substring(0,2)
                        </h3>
                    }
                    else
                    {
                        <img class="w-24 h-24" src="https://cdn.discordapp.com/icons/@(server.Id)/@(server.Icon).png?size=2048" />
                    }
                    </div>
                </a>
            }
        </section>
    }
</aside>




@code{

    protected override async Task OnInitializedAsync()
    {
        await Connector.RetrieveGuildsAsync();
    }

}